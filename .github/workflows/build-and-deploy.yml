name: Build and Deploy Shiny App

# Run this workflow every time code is pushed to the main branch
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository code
    - name: Check out repository code
      uses: actions/checkout@v3
      with:
        persist-credentials: false  # We'll handle authentication separately

    # Step 2: Set up R environment
    - name: Set up R environment
      uses: r-lib/actions/setup-r@v2

    # Step 3: Cache R packages
    - name: Cache R packages
      uses: actions/cache@v3
      with:
        path: ~/.R/packrat/lib/x86_64-pc-linux-gnu/*
        key: ${{ runner.os }}-R-${{ hashFiles('**/DESCRIPTION') }}
        restore-keys: |
          ${{ runner.os }}-R-

    # Step 4: Install R package dependencies
    - name: Install R package dependencies
      run: |
        options(repos = c(REPO_NAME = "https://packagemanager.rstudio.com/all/__linux__/focal/latest"))
        install.packages("remotes")
        remotes::install_cran("shinylive")
        remotes::install_cran(c("shiny", "shinyjs", "bslib"))
      shell: Rscript {0}

    # Step 5: Build the Shiny app into static files using shinylive
    - name: Build Shiny app with shinylive
      run: |
        shinylive::export(appdir = "visual-analytics-shiny", destdir = "docs")
      shell: Rscript {0}

    # Step 6: Commit and push the changes to the repository
    - name: Commit and push changes
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add docs
        # Only commit if there are changes
        git diff-index --quiet HEAD || git commit -m "Auto-update shinylive app"
        git push origin HEAD:main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
